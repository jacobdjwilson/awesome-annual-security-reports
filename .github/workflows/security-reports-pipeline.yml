
name: Security Reports Processing Pipeline

on:
  push:
    branches: [main, development]
    paths:
      - 'Annual Security Reports/**/*.pdf'
  pull_request:
    branches: [main, development]
    paths:
      - 'Annual Security Reports/**/*.pdf'
  workflow_dispatch:
    inputs:
      force_scan_all:
        description: 'Force scan all PDF files (not just changed)'
        required: false
        default: 'false'
        type: boolean
      skip_virus_scan:
        description: 'Skip VirusTotal scanning'
        required: false
        default: 'false'
        type: boolean

permissions:
  contents: write
  pull-requests: write

jobs:
  discover-and-scan:
    runs-on: ubuntu-latest
    outputs:
      files_to_process: ${{ steps.find-files.outputs.files_to_process }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

            - name: Find changed PDF files
        id: find-files
        run: |
          if [[ "${{ github.event.inputs.force_scan_all }}" == "true" ]]; then
            find "Annual Security Reports" -name "*.pdf" > files_to_process.txt
            touch deleted_files.txt
          else
            git diff --name-only --diff-filter=AM ${{ github.event.before }} ${{ github.event.after }} | grep 'Annual Security Reports/.*\.pdf

      - name: Setup Python Environment
        if: steps.find-files.outputs.files_to_process != ''
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        if: steps.find-files.outputs.files_to_process != ''
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run VirusTotal Scan
        if: steps.find-files.outputs.files_to_process != '' && github.event.inputs.skip_virus_scan != 'true'
        env:
          VIRUS_TOTAL_API_KEY: ${{ secrets.VIRUS_TOTAL_API_KEY }}
        run: |
          python .github/scripts/virus-total-scan.py files_to_process.txt --deleted-files deleted_files.txt --output-json scan_results.json

      - name: Upload scan results
        if: steps.find-files.outputs.files_to_process != ''
        uses: actions/upload-artifact@v4
        with:
          name: scan-results
          path: scan_results.json

      - name: Upload files to process
        if: steps.find-files.outputs.files_to_process != ''
        uses: actions/upload-artifact@v4
        with:
          name: files-to-process
          path: files_to_process.txt

      - name: Upload deleted files list
        if: steps.find-files.outputs.files_to_process != ''
        uses: actions/upload-artifact@v4
        with:
          name: deleted-files
          path: deleted_files.txt

  process-pdfs:
    runs-on: ubuntu-latest
    needs: discover-and-scan
    if: needs.discover-and-scan.outputs.files_to_process != ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download files to process
        uses: actions/download-artifact@v4
        with:
          name: files-to-process

      - name: Setup Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install markitdown[pdf] google-generativeai google-api-python-client

      - name: Run PDF Converter
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GOOGLE_SEARCH_API_KEY: ${{ secrets.GOOGLE_SEARCH_API_KEY }}
          GOOGLE_CSE_ID: ${{ secrets.GOOGLE_CSE_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PROMPT_PATH=".github/ai-prompts/pdf-to-markdown-prompt.md"
          PROMPT_VERSION=$(git log -n 1 --pretty=format:%s -- $PROMPT_PATH | grep -oP 'v\d+\.\d+(\.\d+)?' || echo 'v1.0')
          BRANCH_NAME=${{ github.head_ref || github.ref_name }}
          python .github/scripts/pdf-converter.py files_to_process.txt $PROMPT_PATH $PROMPT_VERSION $BRANCH_NAME --output-json conversions.json

      - name: Commit and Push Markdown Files
        run: |
          git push

      - name: Upload conversion results
        uses: actions/upload-artifact@v4
        with:
          name: conversion-results
          path: conversions.json

  update-readme:
    runs-on: ubuntu-latest
    needs: process-pdfs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull latest changes
        run: git pull

      - name: Download conversion results
        uses: actions/download-artifact@v4
        with:
          name: conversion-results

      - name: Setup Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-generativeai

      - name: Run Report Analyzer
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          python .github/scripts/report-analyzer.py conversions.json --readme-path README.md --output-json analysis.json

      - name: Run README Updater
        run: |
          python .github/scripts/readme-updater.py analysis.json --readme-path README.md

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update README with latest security reports"
            git push
          fi
 > files_to_process.txt || true
            git diff --name-only --diff-filter=D ${{ github.event.before }} ${{ github.event.after }} | grep 'Annual Security Reports/.*\.pdf

      - name: Setup Python Environment
        if: steps.find-files.outputs.files_to_process != ''
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        if: steps.find-files.outputs.files_to_process != ''
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run VirusTotal Scan
        if: steps.find-files.outputs.files_to_process != '' && github.event.inputs.skip_virus_scan != 'true'
        env:
          VIRUS_TOTAL_API_KEY: ${{ secrets.VIRUS_TOTAL_API_KEY }}
        run: |
          python .github/scripts/virus-total-scan.py files_to_process.txt --deleted-files deleted_files.txt --output-json scan_results.json

      - name: Upload scan results
        if: steps.find-files.outputs.files_to_process != ''
        uses: actions/upload-artifact@v4
        with:
          name: scan-results
          path: scan_results.json

      - name: Upload files to process
        if: steps.find-files.outputs.files_to_process != ''
        uses: actions/upload-artifact@v4
        with:
          name: files-to-process
          path: files_to_process.txt

      - name: Upload deleted files list
        if: steps.find-files.outputs.files_to_process != ''
        uses: actions/upload-artifact@v4
        with:
          name: deleted-files
          path: deleted_files.txt

  process-pdfs:
    runs-on: ubuntu-latest
    needs: discover-and-scan
    if: needs.discover-and-scan.outputs.files_to_process != ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download files to process
        uses: actions/download-artifact@v4
        with:
          name: files-to-process

      - name: Setup Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install markitdown[pdf] google-generativeai google-api-python-client

      - name: Run PDF Converter
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GOOGLE_SEARCH_API_KEY: ${{ secrets.GOOGLE_SEARCH_API_KEY }}
          GOOGLE_CSE_ID: ${{ secrets.GOOGLE_CSE_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PROMPT_PATH=".github/ai-prompts/pdf-to-markdown-prompt.md"
          PROMPT_VERSION=$(git log -n 1 --pretty=format:%s -- $PROMPT_PATH | grep -oP 'v\d+\.\d+(\.\d+)?' || echo 'v1.0')
          BRANCH_NAME=${{ github.head_ref || github.ref_name }}
          python .github/scripts/pdf-converter.py files_to_process.txt $PROMPT_PATH $PROMPT_VERSION $BRANCH_NAME --output-json conversions.json

      - name: Commit and Push Markdown Files
        run: |
          git push

      - name: Upload conversion results
        uses: actions/upload-artifact@v4
        with:
          name: conversion-results
          path: conversions.json

  update-readme:
    runs-on: ubuntu-latest
    needs: process-pdfs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull latest changes
        run: git pull

      - name: Download conversion results
        uses: actions/download-artifact@v4
        with:
          name: conversion-results

      - name: Setup Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-generativeai

      - name: Run Report Analyzer
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          python .github/scripts/report-analyzer.py conversions.json --readme-path README.md --output-json analysis.json

      - name: Run README Updater
        run: |
          python .github/scripts/readme-updater.py analysis.json --readme-path README.md

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update README with latest security reports"
            git push
          fi
 > deleted_files.txt || true
          fi
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "files_to_process<<$EOF" >> $GITHUB_OUTPUT
          cat files_to_process.txt >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

      - name: Setup Python Environment
        if: steps.find-files.outputs.files_to_process != ''
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        if: steps.find-files.outputs.files_to_process != ''
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run VirusTotal Scan
        if: steps.find-files.outputs.files_to_process != '' && github.event.inputs.skip_virus_scan != 'true'
        env:
          VIRUS_TOTAL_API_KEY: ${{ secrets.VIRUS_TOTAL_API_KEY }}
        run: |
          python .github/scripts/virus-total-scan.py files_to_process.txt --deleted-files deleted_files.txt --output-json scan_results.json

      - name: Upload scan results
        if: steps.find-files.outputs.files_to_process != ''
        uses: actions/upload-artifact@v4
        with:
          name: scan-results
          path: scan_results.json

      - name: Upload files to process
        if: steps.find-files.outputs.files_to_process != ''
        uses: actions/upload-artifact@v4
        with:
          name: files-to-process
          path: files_to_process.txt

      - name: Upload deleted files list
        if: steps.find-files.outputs.files_to_process != ''
        uses: actions/upload-artifact@v4
        with:
          name: deleted-files
          path: deleted_files.txt

  process-pdfs:
    runs-on: ubuntu-latest
    needs: discover-and-scan
    if: needs.discover-and-scan.outputs.files_to_process != ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download files to process
        uses: actions/download-artifact@v4
        with:
          name: files-to-process

      - name: Setup Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install markitdown[pdf] google-generativeai google-api-python-client

      - name: Run PDF Converter
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GOOGLE_SEARCH_API_KEY: ${{ secrets.GOOGLE_SEARCH_API_KEY }}
          GOOGLE_CSE_ID: ${{ secrets.GOOGLE_CSE_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PROMPT_PATH=".github/ai-prompts/pdf-to-markdown-prompt.md"
          PROMPT_VERSION=$(git log -n 1 --pretty=format:%s -- $PROMPT_PATH | grep -oP 'v\d+\.\d+(\.\d+)?' || echo 'v1.0')
          BRANCH_NAME=${{ github.head_ref || github.ref_name }}
          python .github/scripts/pdf-converter.py files_to_process.txt $PROMPT_PATH $PROMPT_VERSION $BRANCH_NAME --output-json conversions.json

      - name: Commit and Push Markdown Files
        run: |
          git push

      - name: Upload conversion results
        uses: actions/upload-artifact@v4
        with:
          name: conversion-results
          path: conversions.json

  update-readme:
    runs-on: ubuntu-latest
    needs: process-pdfs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull latest changes
        run: git pull

      - name: Download conversion results
        uses: actions/download-artifact@v4
        with:
          name: conversion-results

      - name: Setup Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-generativeai

      - name: Run Report Analyzer
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          python .github/scripts/report-analyzer.py conversions.json --readme-path README.md --output-json analysis.json

      - name: Run README Updater
        run: |
          python .github/scripts/readme-updater.py analysis.json --readme-path README.md

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update README with latest security reports"
            git push
          fi
